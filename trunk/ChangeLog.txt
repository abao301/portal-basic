
										××××××××××××××××××××××××××××××××××××
													修改记录
										××××××××××××××××××××××××××××××××××××
   

－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
版本: 3.0.1    时间: 2012-12-20    人员：梁东成

1、增加 Action Convention，支持“Action 零配置”：
	1) 根据 Action 请求的地址信息自动加载 Action，并调用相应的入口方法处理请求
	2) 根据 Action 请求的地址信息和 Action Result 自动组合出输出页面的地址并转发
	3) 通过 @Result/@Results 和 @ExceptionMapping/@ExceptionMappings 注解自定义 Result 和 Exception 处理策略
	4) Action Convention 相关查找规则：
		A、【Action Entry】
			-> Action Entry 配置
				-> Action Convention（自动匹配）
		B、【Action Result】
			-> Action Entry 的 Result 配置
				-> Action 的 Result 配置
					-> Action 入口方法的 @Result/@Results 注解
						-> Action 类的 @Result/@Results 注解
							-> 全局 Result 配置
								-> Action Convention（自动匹配）
		C、【Exception Mapping】
			-> Action Entry 的 Exception-Mapping 配置
				-> Action 的 Exception-Mapping 配置
					-> Action 入口方法的 @ExceptionMapping/@ExceptionMappings 注解
						-> Action 类的 @ExceptionMapping/@ExceptionMappings 注解
							-> 全局 Exception-Mapping 配置
	
2、增加 REST 支持：
	1) 增加 REST 插件包 portal-basic-ext-rest-3.0.1.jar 用于支持 REST
	2) portal-basic-ext 通过 com.bruce.ext.rest.RestDispatcher 过滤器把 REST 请求转换为 Action 请求
	3) portal-basic-ext 提供 com.bruce.ext.rest.RestActionSupport 作为处理 REST 请求的 Action 基类
	4) Action 的 REST 请求处理方法通过声明 @Get/@Post/@Put/@Delete 注解来匹配 REST 地址格式，并注入参数
	5) 内置 Rails-style REST 标准方法
	6) 同时支持 HTML/XML/JSON 三种视图格式，应用程序也可以扩展自己的视图格式
	7) portal-basic-ext 与 Action Convention 结合使用能实现“零配置”处理 REST 请求
		
3、其它更新：
	1) Action Filter
		A、应用程序启动时会加载所有 Action Filter
		B、Action Filter 不重复拦截：如果多个匹配的 Action Filter 配置使用同一个拦截器对象，该拦截器对象的拦截方法只会调用一次
	2) 取消“默认 Action”：由于“默认 Action”容易导致应用程序跟踪困难等问题，其副作用大于正作用，因此不再支持“默认 Action”
		（当 ‘/a/b/c/MyAction’ 不出存在时，不再尝试查找默认包中的 ‘/MyAction’）
	3) 包结构更新：原 com.bruce.util.basedao 包改为 com.bruce.dao
	4) 修改配置文件的跟元素名称: 
		应用程序配置文件 -> APP			(参考：app-config.xsd)
		MVC 主配置文件 -> MVC-MAIN		(参考：mvc-config-main.xsd)
		MVC 从配置文件 -> MVC-INCLUDE	(参考：mvc-config-include.xsd)
		REST 配置文件 -> REST			(参考：rest-config.xsd)
	
4、应用程序升级说明：Portal-Basic-3.x 在功能与配置方面完全兼容 Portal-Basic-2.x，但有两处地方需要调整
	1) 由于原 com.bruce.util.basedao 包改为 com.bruce.dao，因此需要修改应用程序代码中对这些类的依赖路径并重新编译；
		另外，还要修改 app-config.xml 的 '<database-session-managers>' 中的 SessionMgr 类路径
	2) 检查应用程序是否使用了“默认 Action”功能，如果使用了该功能则需要进行调整

－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
版本: 2.6.2    时间: 2012-11-20    人员：梁东成

1、增加 Spring 支持：
	1) 增加  Spring 插件包 portal-basic-ext-spring-2.6.2.jar 用于整合 Spring
	2) Action 通过 @SpringBean/@SpringBeans 注解声明 Spring Bean
	3) Action 通过拦截器 com.bruce.ext.spring.SpringInjectFilter 解析 @SpringBean/@SpringBeans 注解并注入 Spring Bean
	4) Portal-Basic 的 DAO 对象能声明为 Spring Bean，从而能在 Spring 环境下使用 Portal-Basic DAO 子框架
	5) 示例工程 MyPortal 增加 Spring 整合示例
	
2、其他更新：
	1) @FormBean、@DaoBean/@DaoBeans、@SpringBean/@SpringBeans 和  @Transaction 注解声明为 '@Inherited'，子类可继承父类的注解

－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
版本: 2.6.1    时间: 2012-11-01    人员：梁东成

1、MVC 框架升级：
	1) 支持多入口 Action（请求格式：http://.../.../<action_name>!<entry_name>.<action_suffix>）
	2) Action 拦截器的过滤规则可以细化到 Action 入口方法级别
	3) @FormBean 注解可声明在 Action 的入口方法中（覆盖 Action 类定义中的 @FormBean 声明）
	4) @FormBean 注解支持成员变量注入（即：属性没有定义公共 setter 方法的成员变量也能注入）
	5) 增加 @DaoBean/@DaoBeans, 支持 DAO 对象注入（不用显式调用 FacadeProxy.create(...) 方法创建 DAO 代理对象）
	6) 添加内置 Request Attribute -> '__base'（HTTP 请求的 BASE URL）
	7) 添加内置 Application Attribute -> '__context'（Servlet Context 的 ROOT PATH）
	8) 修改 base.jsp，用 {__base} 取代 {basePath} 
	9) MVC 配置文件支持多重“include”（即：从配置文件也可以“include”其它配置文件），并能自动过滤重复文件
	10) 优化 MVC 框架的缓存机制，提升框架性能
	11) 示例工程 MyPortal 增加 Freemarker 整合示例
	
2、DAO 框架升级：
	1) 增加 FacadeProxy.create(...) 系列 DAO 访问方法
	2) 为 DAO 类添加 @Transaction 注解，与 FacadeProxy.create(...) 系列方法配合使用
	3) FacadeProxy.create(...) 系列方法支持在 Action 中自动注入 DAO 对象（利用  @DaoBean/@DaoBeans 注解） 
	4) 优化 DAO 框架的缓存机制，提升框架性能

－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－－
